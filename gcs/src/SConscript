#

# Clone environment as we need to tune compilation flags
libgcs_env = DefaultEnvironment().Clone()

# Backends (TODO: Get from global options)
libgcs_env.Append(CPPFLAGS = ' -DGCS_USE_GCOMM')

# Need to live without -pedantic and use gnu99 std
libgcs_env.Replace(CFLAGS = '-std=gnu99 -fno-strict-aliasing')

# Need to live without -pedantic
libgcs_env.Replace(CXXFLAGS = '-Wno-long-long -Wno-deprecated -Weffc++ -ansi')

libgcs_sources = Split('''
                          gcs_conf.c
                          gcs_fifo_lite.c
                          gcs_msg_type.c
                          gcs_comp_msg.c
                          gcs_backend.c
                          gcs_dummy.c
                          gcs_act_proto.c
                          gcs_defrag.c
                          gcs_state_msg.c
                          gcs_node.c
                          gcs_group.c
                          gcs_core.c
                          gcs.c
                          gcs_gcomm.cpp
                       ''')

libgcs_env.SharedLibrary('gcs', libgcs_sources)
libgcs_env.StaticLibrary('gcs', libgcs_sources)

libgcs_env.Program('gcs_test.c',
                   LIBS = Split('''
                                   gcs
                                   gcomm
                                   galerautils++
                                   galerautils
                                   rt
                                   pthread
                                '''),
                   LINK = libgcs_env['CXX'],
                   LINKFLAGS = '-static')

SConscript('unit_tests/SConscript')
