=============================
 Weighted Quorum
=============================
.. _`Weighted Quorum`:
.. index::
   pair: Weighted Quorum; Description
.. index::
   pair: Weighted Quorum; Setting weight on a node

Galera supports a weighted quorum, where each node can be
assigned a weight in the 0 to 255 range, with which it will
participate in quorum calculations. 

The quorum calculation formula is:

.. math:: (sum(p_i x w_i) - sum(l_i x w_i))/2 < sum(m_i x w_i)
    
Where:

- *p_i* |---| Members of the last seen primary component
- *l_i* |---| Members that are known to have left gracefully
- *m_i* |---| Current component members
- *w_i* |---| Member weights

In other words, the quorum is preserved if (and only if) the sum
weight of the nodes in a new component strictly exceeds half of
that of the preceding primary component, minus the nodes which left
gracefully.

Node weight can be customized by using the ``pc.weight`` Galera
parameter. By default, the node weight is 1, which translates into
the traditional "node count" behavior.

.. note:: The node weight can be changed in runtime simply by setting
          the ``pc.weight`` parameter. The new weight is applied when
          a message carrying a weight is delivered. At the moment,
          there is no mechanism to notify on application of the new
          weight, but it will just "eventually" happen, when the
          message is delivered.

.. warning:: If a group partitions at the moment when the weight change
             message is delivered, all partitioned components that deliver
             weight change messages in the transitional view will become
             non-primary components. Partitions that deliver messages
             in the regular view will go through the quorum computation
             with the applied weight when the following transitional view
             is delivered. In other words, there is a corner case where
             the entire cluster can end up in a non-primary component, if
             the weight changing message is sent at the moment when the
             partitioning takes place.
             
             Recovery from such a situation should be done by either
             waiting for a re-merge or by inspecting which partition
             is most advanced and by bootstrapping it as a new primary
             component.


---------------------------------
 Weighted Quorum Examples
---------------------------------
.. _`Weighted Quorum Examples`:

See below for some weighted quorum examples and use cases:

- Weighted quorum for three nodes::

    n1: weight 2
    n2: weight 1
    n3: weight 0
  
  Killing nodes n2 and n3 simultaneously preserves primary component
  on n1. Killing n1 makes n2 and n3 become non-primary components.
- Weighted quorum for a simple master-slave scenario::

    n1: weight 1
    n2: weight 0
  
  If master n1 dies, n2 will end up become a non-primary component.
  However, if n2 dies, n1 will continue as the primary component.
  If the network connection between n1 and n2 fails, n1 will continue
  as the primary component and n2 will become a non-primary component.
- Weighted quorum for a master and multiple slaves scenario::

    n1: weight 1
    n2: weight 0
    n3: weight 0
    ...
    nn: weight 0

  If n1 dies, all remaining nodes end up as non-primary components.
  If any other node dies, the primary component is preserved. In the
  case of network partitioning, n1 will always remain as a primary
  component.
- Weighted quorum for a primary and secondary site scenario::

    n1: weight 2
    n2: weight 2
    n3: weight 1
    n4: weight 1

  Site 1 has nodes n1 and n2, site 2 has nodes n3 and n4. Setting node
  weights as above guarantees that nodes at site 1 remain the primary
  component if site 2 goes down or if the network between the sites
  fails. Also, either n1 or n2 can crash without the rest of the nodes
  becoming non-primary components.
  
  
.. |---|   unicode:: U+2014 .. EM DASH
   :trim:
