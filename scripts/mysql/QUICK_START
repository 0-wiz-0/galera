Galera for MySQL Quick Start Guide
==================================

This is an informal guide to quick setup of MySQL/Galera cluster for 
experienced users. For more detailed information please see README.

MySQL/Galera cluster is a multi-master MySQL server cluster. It provides both 
true service high-availability (all nodes always have the same data) and 
performance scalability. This distribution is all you need. You don't need to 
be root or to uninstall/disable any software.

MYSQL CLUSTER IN 3 EASY STEPS:

To setup MySQL/Galera cluster all you need is to start an arbitrator and 
connect mysqld instances to it. Here's an example of how to do it:

Suppose you have three networked computers Node1, Node2, Node3 of roughly the 
same performance and Node1 has IP address 192.168.1.1

1. Copy and unpack this distribution on each node to the directory of your
   choice (hereafter INSTALL_DIR). The location must have at least 1Gb of free
   space for database files.

2. Start arbitrator on Node1. For that just run gcomm script from this 
   distribution:

   $ <INSTALL_DIR>/gcomm start

3. Configure and start MySQL server on each node 
   
   Galera distribution has a sample my.cfg option file, which contains
   default options suitable for an average installation. You probably 
   need to modify only the wsrep_gcs_address option to contain your arbitrator
   node address:

   wsrep_gcs_address= 192.168.1.1

   After this change, you can start the server with following command:

   <INSTALL_DIR>/mysql-galera start

   This will start mysqld with data directory at <INSTALL_DIR>/mysql/var and 
   listening at default mysqld port 3306.


That's it. You've got a multi-master MySQL/Galera cluster. Node1, Node2 and 
Node3 will now synchronize all writes to the whole cluster.
Root password is 'rootpass' and there is also 'test' user with password 
'testpass' and privileges on 'test.*'. You can now populate your database 
with mysqldump by loading your database dump to (any) one of the nodes.


LIMITATIONS:

1. Currently replication works only with InnoDB storage engine. Any writes to 
   tables of other types, including system (mysql.*) tables are not replicated. 
   E.g. if you want to add another user, you have to do it manually on every
   node where you want that user to connect to.

2. Currently MySQL/Galera demo lacks automatic state transfer. Every time 
   you add a new node to the cluster and/or restart a node you need to manually 
   synchronize database contents on the nodes. See README for details.


QUICK ANSWERS:

1. Yes, arbitrator can run on any node or even on a separate machine. 
   Arbitrator consumes little CPU/RAM resources but will benefit from fast 
   network connection.

2. Yes, currently arbitrator is a single point of failure. It will change soon.

3. Yes, it works anywhere TCP works, including Amazon EC2(TM).

4. Yes, it'd be faster if there were a dedicated network for arbitrator 
   connections and a separate network for MySQL client connections.

5. Yes, it is highly configurable and flexible. For more info see README, 
   mysql-galera --help and my.cnf that comes with the distribution.

6. If your application cannot utilize more than one server, you can use TCP 
   connection balancer like GLB (http://www.codership.com/products/downloads) 
   or pen (http://siag.nu/pen/).
   Note however, that SQL traffic balancing is very CPU consuming (due to high
   number of small packets), so it is recommended to have a dedicated 
   machine for load balancer.

7. The patch for MySQL can be obtained at: bzr branch lp:codership-mysql

Please direct all your suggestions, opinions and inquiries to info@codership.com

