# Copyright (C) 2011 Codership Oy <info@codership.com>

env = DefaultEnvironment()

conf = Configure(env)

if not conf.CheckLibWithHeader(libs=['boost_program_options'],
                               header='boost/program_options.hpp',
                               language='CXX',
                               autoadd=0):
    print 'Error: boost_program_options not found'
    Exit (1)

env.Append(LIBS=File('#/gcs/src/libgcs4garb.a'))
env.Append(LIBS=File('#/gcomm/src/libgcomm.a'))
env.Append(LIBS=File('#/galerautils/src/libgalerautils.a'))
env.Append(LIBS=File('#/galerautils/src/libgalerautils++.a'))

bpo_static = '/usr/lib/libboost_program_options.a'

import os

if os.path.isfile(bpo_static):
    env.Append(LIBS=File(bpo_static))
else:
    env.Append(LIBS=['boost_program_options'])

# special environment for garb_config.cpp
conf_env = env.Clone()
version = ARGUMENTS.get('version', '0.8dev')
conf_env.Append(CPPFLAGS = ' -DGALERA_VER=\\"' + version + '\\"')
revno   = ARGUMENTS.get('revno', 'XXXX')
conf_env.Append(CPPFLAGS = ' -DGALERA_REV=\\"' + revno + '\\"')

garb = env.Program(target = 'garbd',
                   source = Split('''
                                  garb_logger.cpp
                                  garb_gcs.cpp
                                  garb_recv_loop.cpp
                                  garb_main.cpp
                              ''')
                              +
                              conf_env.SharedObject(['garb_config.cpp'])
                   )

